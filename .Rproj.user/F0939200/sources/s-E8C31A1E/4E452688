{
    "collab_server" : "",
    "contents" : "# install.packages(\"psych\", dependencies = TRUE)\n# install.packages(\"car\", dependencies = TRUE)\n# install.packages(\"ggplot2\", dependencies = TRUE)\n# install.packages(\"DAAG\", dependencies = TRUE)\nlibrary(\"psych\") # pairs.panels, cor.ci\nlibrary(ggplot2) # ggplot with a lot of dependencies\nlibrary(car)\nlibrary(leaps) # regsubsets\nlibrary(DAAG) # cv.lm\nlibrary(bootstrap) # crossval\n\n\n# set working directory\nsetwd(\"C:/Users/sacri/Downloads/R Assignment 1\")\n\n\n# load relevant targets and predictors\nwb.agriland <- read.csv(file=\"API_AG.LND.AGRI.ZS_DS2_en_csv_v2.csv\", skip=4, header=TRUE)\nwb.cropprod <- read.csv(file=\"API_AG.PRD.CROP.XD_DS2_en_csv_v2.csv\", skip=4, header=TRUE)\nwb.foodprod <- read.csv(file=\"API_AG.PRD.FOOD.XD_DS2_en_csv_v2.csv\", skip=4, header=TRUE)\nwb.fdi <- read.csv(file=\"API_BX.KLT.DINV.CD.WD_DS2_en_csv_v2.csv\", skip=4, header=TRUE)   # foreign direct investment\nwb.airpoll <- read.csv(file=\"API_EN.ATM.PM25.MC.ZS_DS2_en_csv_v2.csv\", skip=4, header=TRUE)\nwb.airtrans <- read.csv(file=\"API_IS.AIR.DPRT_DS2_en_csv_v2.csv\", skip=4, header=TRUE)\nwb.internet <- read.csv(file=\"API_IT.NET.USER.P2_DS2_en_csv_v2.csv\", skip=4, header=TRUE) # target variable\nwb.adultlitr <- read.csv(file=\"API_SE.ADT.LITR.FE.ZS_DS2_en_csv_v2.csv\", skip=4, header=TRUE) # target variable\nwb.healthexp <- read.csv(file=\"API_SH.XPD.TOTL.ZS_DS2_en_csv_v2.csv\", skip=4, header=TRUE)\nwb.empfserv <- read.csv(file=\"API_SL.SRV.EMPL.FE.ZS_DS2_en_csv_v2.csv\", skip=4, header=TRUE)  # employement of female in services\nwb.lfexpbirth <- read.csv(file=\"API_SP.DYN.LE00.IN_DS2_en_csv_v2.csv\", skip=4, header=TRUE)  # life expectancy at birth\nwb.mobcelsubs <- read.csv(file=\"API_IT.CEL.SETS.P2_DS2_en_csv_v2.csv\", skip=4, header=TRUE)\nwb.Greenhousegas <- read.csv(file=\"API_EN.ATM.GHGT.KT.CE_DS2_en_csv_v2.csv\", skip=4, header=TRUE)\nwb.watersrvcs <- read.csv(file=\"API_SH.H2O.SAFE.ZS_DS2_en_csv_v2.csv\", skip=4, header=TRUE)\nwb.sanitationfclts <- read.csv(file=\"API_SH.STA.ACSN.UR_DS2_en_csv_v2.csv\", skip=4, header=TRUE)\nwb.militaryexp <- read.csv(file=\"API_MS.MIL.XPND.GD.ZS_DS2_en_csv_v2.csv\", skip=4, header=TRUE)\nwb.secureintrnt <- read.csv(file=\"API_IT.NET.SECR.P6_DS2_en_csv_v2.csv\", skip=4, header=TRUE)\nwb.gdpcap <- read.csv(file=\"API_NY.GDP.PCAP.CD_DS2_en_csv_v2.csv\", skip=4, header=TRUE)  # gdp per capita\nwb.researchersrnd <- read.csv(file=\"API_SP.POP.SCIE.RD.P6_DS2_en_csv_v2.csv\", skip=4, header=TRUE)\n\n\n# individual plotting of chosen variables\nplot(density(wb.agriland$X2012, na.rm = TRUE))\nplot(density(wb.cropprod$X2012, na.rm = TRUE))\nplot(density(wb.foodprod$X2012, na.rm = TRUE))\nplot(density(wb.fdi$X2012, na.rm = TRUE))\nplot(density(wb.airpoll$X2012, na.rm = TRUE))\nplot(density(wb.airtrans$X2012, na.rm = TRUE))\nplot(density(wb.internet$X2012, na.rm = TRUE))\nplot(density(wb.gdpcap$X2012, na.rm = TRUE))\nplot(density(wb.adultlitr$X2012, na.rm = TRUE))\nplot(density(wb.healthexp$X2012, na.rm = TRUE))\nplot(density(wb.empfserv$X2012, na.rm = TRUE))\nplot(density(wb.lfexpbirth$X2012, na.rm = TRUE))\nplot(density(wb.mobcelsubs$X2012, na.rm = TRUE))\nplot(density(wb.Greenhousegas$X2012, na.rm = TRUE))\nplot(density(wb.watersrvcs$X2012, na.rm = TRUE))\nplot(density(wb.sanitationfclts$X2012, na.rm = TRUE))\nplot(density(wb.militaryexp$X2012, na.rm = TRUE))\nplot(density(wb.secureintrnt$X2012, na.rm = TRUE))\nplot(density(wb.researchersrnd$X2012, na.rm = TRUE))\n\n\n# choose year to identify\nagriland <- wb.agriland$X2012\ncropprod <- wb.cropprod$X2012\nfoodprod <- wb.foodprod$X2012\nfdi <- wb.fdi$X2012\nairpoll <- wb.airpoll$X2012\nairtrans <- wb.airtrans$X2012\ninternet <- wb.internet$X2012\nadultlitr <- wb.adultlitr$X2012\nhealthexp <- wb.healthexp$X2012\nempfserv <- wb.empfserv$X2012\nlfexpbirth <- wb.lfexpbirth$X2012\nmobcelsubs <- wb.mobcelsubs$X2012\nGreenhousegas <- wb.Greenhousegas$X2012\nwatersrvcs <- wb.watersrvcs$X2012\nsanitationfclts <- wb.sanitationfclts$X2012\nmilitaryexp <- wb.militaryexp$X2012\nsecureintrnt <- wb.secureintrnt$X2012\nresearchersrnd <- wb.researchersrnd$X2012\ngdpcap <- wb.gdpcap$X2012\nresearchersrnd <- wb.researchersrnd$X2012\n\n# load all 2012 variables to single data frame\nall.2012 <- data.frame(\n  agriland,\n  cropprod,\n  foodprod,\n  fdi,\n  airpoll,\n  airtrans,\n  adultlitr,\n  healthexp,\n  empfserv,\n  mobcelsubs,\n  watersrvcs,\n  sanitationfclts,\n  militaryexp,\n  secureintrnt,\n  lfexpbirth,\n  Greenhousegas,\n  internet,\n  researchersrnd,\n  gdpcap\n  )\n\nsummary(all.2012)\nView(all.2012)\npairs.panels(all.2012, col=\"red\")\ncor.ci(all.2012)\n\n# replacing all NAs with 0.\nall.2012.na.zeros <- all.2012\nall.2012.na.zeros[is.na(all.2012.na.zeros)] <- 0\nsummary(all.2012.na.zeros)\npairs.panels(all.2012.na.zeros, col=\"red\")\n\n\n# replacing all NAs with the mean of each row\nrm.agriland <- rowMeans(wb.agriland[,-c(1:34)], na.rm = TRUE)\nrm.cropprod <- rowMeans(wb.cropprod[,-c(1:34)], na.rm = TRUE)\nrm.foodprod <- rowMeans(wb.foodprod[,-c(1:34)], na.rm = TRUE)\nrm.fdi <- rowMeans(wb.fdi[,-c(1:34)], na.rm = TRUE)\nrm.airpoll <- rowMeans(wb.airpoll[,-c(1:34)], na.rm = TRUE)\nrm.airtrans <- rowMeans(wb.airtrans[,-c(1:34)], na.rm = TRUE)\nrm.adultlitr <- rowMeans(wb.adultlitr[,-c(1:34)], na.rm = TRUE)\nrm.secureintrnt <- rowMeans(wb.secureintrnt[,-c(1:34)], na.rm = TRUE)\nrm.empfserv <- rowMeans(wb.empfserv[,-c(1:34)], na.rm = TRUE)\nrm.healthexp <- rowMeans(wb.healthexp[,-c(1:34)], na.rm = TRUE)\nrm.mobcelsubs <- rowMeans(wb.mobcelsubs[,-c(1:34)], na.rm = TRUE)\nrm.watersrvcs <- rowMeans(wb.watersrvcs[,-c(1:34)], na.rm = TRUE)\nrm.sanitationfclts <- rowMeans(wb.sanitationfclts[,-c(1:34)], na.rm = TRUE)\nrm.militaryexp <- rowMeans(wb.militaryexp[,-c(1:34)], na.rm = TRUE)\nrm.internet <- rowMeans(wb.internet[,-c(1:34)], na.rm = TRUE)\nrm.lfexpbirth <- rowMeans(wb.lfexpbirth[,-c(1:34)], na.rm = TRUE)\nrm.Greenhousegas <- rowMeans(wb.Greenhousegas[,-c(1:34)], na.rm = TRUE)\nrm.researchersrnd <- rowMeans(wb.researchersrnd[,-c(1:34)], na.rm = TRUE)\nrm.gdpcap <- rowMeans(wb.gdpcap[,-c(1:34)], na.rm = TRUE)\n\n\n# create a data frame of all indicator row means\nall.na.rowmeans <- data.frame(\n  rm.agriland,\n  rm.cropprod,\n  rm.foodprod,\n  rm.fdi,\n  rm.airpoll,\n  rm.airtrans,\n  rm.adultlitr,\n  rm.healthexp,\n  rm.empfserv,\n  rm.mobcelsubs,\n  rm.watersrvcs,\n  rm.sanitationfclts,\n  rm.militaryexp,\n  rm.secureintrnt,\n  rm.lfexpbirth,\n  rm.Greenhousegas,\n  rm.internet,\n  rm.researchersrnd,\n  rm.gdpcap\n)\n\n# See the statistics and correlations\nView(all.na.rowmeans)\nsummary(all.na.rowmeans)\npairs.panels(all.na.rowmeans, col=\"red\")\n\n# Now we can eliminate NaNs with column means as before\nfor(i in 1:ncol(all.na.rowmeans)){\n  all.na.rowmeans[is.nan(all.na.rowmeans[,i]), i] <- \n    mean(all.na.rowmeans[,i], na.rm = TRUE)\n}\nsummary(all.na.rowmeans)\npairs.panels(all.na.rowmeans, col=\"red\")\n\n\n# Note that all indicators are %, except for co2em which are metric tonnes per capita\n# We could try to trasform it to better match the units of the remaning variables\nall.transformed <- all.na.rowmeans\nall.transformed$rm.militaryexp <- all.transformed$rm.militaryexp^(1/6)\nall.transformed$rm.fdi <- all.transformed$rm.fdi^(1/6)\nall.transformed$rm.Greenhousegas <- all.transformed$rm.Greenhousegas^(1/6)\npairs.panels(all.transformed, col=\"red\")\n\n# If you have a lot of variables a more compact view is preferred\n# You can also use this method to find out how much you can trust correlations (p-value)\ncor.ci(all.transformed)\n\n# Remove variables which have little impact on the dependent variable\n# Also remove all correlated independent variables (between themselves)\n# In this case, I dropped military, greenhouse gas emission, health expectancy, air transportation, air pollution, fdi, food production, crop production, and agriculture land\nall.result <- subset(all.transformed, select = -c(rm.agriland, rm.cropprod, rm.foodprod, rm.airpoll, rm.airtrans, rm.adultlitr, rm.healthexp, rm.militaryexp, rm.Greenhousegas))\npairs.panels(all.result, col=\"red\")\ncor.ci(all.result)\n\n# Remove multi-colinearity (life expectancy birth)\nall.result <- subset(all.transformed, select = -c(rm.agriland, rm.cropprod, rm.foodprod, rm.airpoll, rm.airtrans, rm.adultlitr, rm.healthexp, rm.militaryexp, rm.Greenhousegas, rm.lfexpbirth))\npairs.panels(all.result, col=\"red\")\ncor.ci(all.result)\n\n# Density plots after several processes\nplot(density(all.result$rm.internet))\nplot(density(all.result$rm.mobcelsubs))\nplot(density(all.result$rm.sanitationfclts))\nplot(density(all.result$rm.gdpcap))\n\n# Scatterplots\nplot(x=all.result$rm.internet, y=all.result$rm.gdpcap,\n     xlab=\"Internet\", ylab = \"GDP per Capita\",\n     col=\"red\", main=\"Internet vs GDP per Capita (1960-2015)\")\nabline(h = mean(all.result$rm.internet), col=\"blue\")\n\nplot(x=all.result$rm.sanitationfclts, y=all.result$rm.gdpcap,\n     xlab=\"Sanitation Facilities\", ylab = \"GDP per Capita\",\n     col=\"red\", main=\"Sanitation Facilities  vs GDP per Capita (1960-2015)\")\nabline(h = mean(all.result$rm.sanitationfclts), col=\"blue\")\n\n# ggplot\nggplot(all.result, aes(x=rm.gdpcap, y=rm.internet)) +\n  ggtitle(\"GDP per Capita vs. Internet\") +\n  labs(x=\"GDP per Capita\", y=\"Internet Accessibility\") +\n  geom_point(color=\"gray\", size=1) + \n  stat_smooth(method=\"loess\", color=\"red\", se=TRUE, fullrange=TRUE, size=0.5) +\n  stat_smooth(method=\"lm\", color=\"blue\", se=FALSE, fullrange=TRUE, size=0.5)\n\nggplot(all.result, aes(x=rm.gdpcap, y=rm.sanitationfclts)) +\n  ggtitle(\"GDP per Capita vs. Sanitation Facilities\") +\n  labs(x=\"GDP per Capita\", y=\"Sanitation Facilities\") +\n  geom_point(color=\"gray\", size=1) + \n  stat_smooth(method=\"loess\", color=\"red\", se=TRUE, fullrange=TRUE, size=0.5) +\n  stat_smooth(method=\"lm\", color=\"blue\", se=FALSE, fullrange=TRUE, size=0.5)\n\nggplot(all.result, aes(x=rm.gdpcap, y=rm.mobcelsubs)) +\n  ggtitle(\"GDP per Capita vs. Mobile Cellphone Subscription\") +\n  labs(x=\"GDP per Capita\", y=\"Mobile Cellphone Subscription\") +\n  geom_point(color=\"gray\", size=1) + \n  stat_smooth(method=\"loess\", color=\"red\", se=TRUE, fullrange=TRUE, size=0.5) +\n  stat_smooth(method=\"lm\", color=\"blue\", se=FALSE, fullrange=TRUE, size=0.5)\n\n# Develop a linear model\n# The model will be built using the training sample of the data\n# The model will be validated using the validation sample of the data\n\n# Split data into training and validation samples\n# We will use (train.size)% for training and (100-train.size)% for validation\nset.seed(2017)\ntrain.size <- 0.8 \ntrain.index <- sample.int(length(all.result$rm.gdpcap), round(length(all.result$rm.gdpcap) * train.size))\ntrain.sample <- all.result[train.index,]\nvalid.sample <- all.result[-train.index,]\n\n\n# using stepwise selection of variables by backwards elimination\n# F-statistic means this statistic value is x times better than taking the mean.\n# r-square means how how much is variation this model has\n\nfit <- lm(rm.gdpcap ~ ., data=train.sample)\nsummary(fit)\n# Residual standard error: 9241 on 199 degrees of freedom\n# Multiple R-squared:  0.6874,\tAdjusted R-squared:  0.6748 \n# F-statistic:  54.7 on 8 and 199 DF,  p-value: < 2.2e-16\n\n# remove empfserv\nfit <- lm(rm.gdpcap ~ rm.fdi + rm.mobcelsubs + rm.watersrvcs + rm.sanitationfclts + rm.secureintrnt + rm.internet + rm.researchersrnd, data= train.sample)\nsummary (fit)\n# Residual standard error: 9220 on 200 degrees of freedom\n# Multiple R-squared:  0.6872,\tAdjusted R-squared:  0.6763 \n# F-statistic: 62.78 on 7 and 200 DF,  p-value: < 2.2e-16\n\n# remove research r n d\nfit <- lm(rm.gdpcap ~ rm.fdi + rm.mobcelsubs + rm.watersrvcs + rm.sanitationfclts + rm.secureintrnt + rm.internet, data= train.sample)\nsummary (fit)\n# Residual standard error: 9205 on 201 degrees of freedom\n# Multiple R-squared:  0.6867,\tAdjusted R-squared:  0.6774 \n# F-statistic: 73.43 on 6 and 201 DF,  p-value: < 2.2e-16\n\n# remove water service\nfit <- lm(rm.gdpcap ~ rm.fdi + rm.mobcelsubs + rm.sanitationfclts + rm.secureintrnt + rm.internet, data= train.sample)\nsummary (fit)\n# Residual standard error: 9196 on 202 degrees of freedom\n# Multiple R-squared:  0.6857,\tAdjusted R-squared:  0.678 \n# F-statistic: 88.15 on 5 and 202 DF,  p-value: < 2.2e-16\n\n# remove secure internet\nfit <- lm(rm.gdpcap ~ rm.fdi + rm.mobcelsubs + rm.sanitationfclts + rm.internet, data= train.sample)\nsummary (fit)\n# Residual standard error: 9207 on 203 degrees of freedom\n# Multiple R-squared:  0.6834,\tAdjusted R-squared:  0.6772 \n# F-statistic: 109.5 on 4 and 203 DF,  p-value: < 2.2e-16\n\n# remove foreign direct investment\nfit <- lm(rm.gdpcap ~ rm.mobcelsubs + rm.sanitationfclts + rm.internet, data= train.sample)\nsummary (fit)\n# Residual standard error: 9206 on 207 degrees of freedom\n# Multiple R-squared:  0.6784,\tAdjusted R-squared:  0.6737 \n# F-statistic: 145.5 on 3 and 207 DF,  p-value: < 2.2e-16\n\n# show the plot of the lastest fit (the best model)\nplot(fit)\nvif(fit)\n#      rm.mobcelsubs rm.sanitationfclts        rm.internet \n#     2.0559             1.7548             2.3973 \n\n# Note however that we found some extreme values, which should be removed, here they are\ntrain.sample[-which(rownames(train.sample) %in% c(\"161\", \"148\", \"136\")),]\n\n# evaluate the final linear model\n# Find all predicted values for both a training set and a validation set\ntrain.sample$pred.gdpcap <- predict(fit, newdata = subset(train.sample, select=c(rm.mobcelsubs, rm.sanitationfclts, rm.internet)))\nvalid.sample$pred.gdpcap <- predict(fit, newdata = subset(valid.sample, select=c(rm.mobcelsubs, rm.sanitationfclts, rm.internet)))\n\n# The theoretical model performance is defined here as R-Squared\nsummary(fit)\n\n# Check and eliminate further extremes if any\ncutoff <- 4/((nrow(train.sample)-length(fit$coefficients)-2)) # Cook's D plot, cutoff as 4/(n-k-1)\nplot(fit, which=4, cook.levels=cutoff)                        # identify D values > cutoff\nplot(fit, which=5, cook.levels=cutoff)                        # We should continue checking Cook!\ntrain.sample <- train.sample[-which(rownames(train.sample) %in% c(\"161\", \"148\", \"136\")),]\n\ncutoff <- 4/((nrow(train.sample)-length(fit$coefficients)-2)) # Cook's D plot, cutoff as 4/(n-k-1)\nplot(fit, which=4, cook.levels=cutoff)                        # identify D values > cutoff\nplot(fit, which=5, cook.levels=cutoff)                        # We should continue checking Cook!\ntrain.sample <- train.sample[-which(rownames(train.sample) %in% c(\"161\", \"148\", \"136\")),]\n\ncutoff <- 4/((nrow(train.sample)-length(fit$coefficients)-2)) # Cook's D plot, cutoff as 4/(n-k-1)\nplot(fit, which=4, cook.levels=cutoff)                        # identify D values > cutoff\nplot(fit, which=5, cook.levels=cutoff)                        # We should continue checking Cook!\ncrPlots(fit)            \n\n\n# Check how good is the model on the training set - correlation^2, RME and MAE\ntrain.corr <- round(cor(train.sample$pred.gdpcap, train.sample$rm.gdpcap), 2)\ntrain.RMSE <- round(sqrt(mean((train.sample$pred.gdpcap - train.sample$rm.gdpcap)^2)))\ntrain.MAE <- round(mean(abs(train.sample$pred.gdpcap - train.sample$rm.gdpcap)))\nc(train.corr^2, train.RMSE, train.MAE)\n# 0.6724 9119.0000 5661.0000\n\n# Check how good is the model on the validation set - correlation^2, RME and MAE\nvalid.corr <- round(cor(valid.sample$pred.gdpcap, valid.sample$rm.gdpcap), 2)\nvalid.RMSE <- round(sqrt(mean((valid.sample$pred.gdpcap - valid.sample$rm.gdpcap)^2)))\nvalid.MAE <- round(mean(abs(valid.sample$pred.gdpcap - valid.sample$rm.gdpcap)))\nc(valid.corr^2, valid.RMSE, valid.MAE)\n# 0.5776 9454.0000 5601.0000\n\n\nfit1 <- lm(rm.gdpcap ~ ., data=all.result)\nsummary(fit1) # Finds the most influential variable based on t-test\n# Residual standard error: 9144 on 252 degrees of freedom\n# Multiple R-squared:  0.6766,\tAdjusted R-squared:  0.6664 \n# F-statistic: 65.91 on 8 and 252 DF,  p-value: < 2.2e-16\n\n\n# Check the regression properties\nscr <- par(mfrow=c(2,2))\nplot(fit1, ask=FALSE)\npar(scr)\nvif(fit1)\n#             rm.fdi        rm.empfserv      rm.mobcelsubs      rm.watersrvcs rm.sanitationfclts    rm.secureintrnt        rm.internet    rm.researchersrnd \n#          1.172750           1.808550           2.229369           3.105833      3.256607            1.266293             4.203537       1.634079 \n\n\n# modified validation test (dropped 2 variables)\nfit1 <- lm(rm.gdpcap ~ rm.mobcelsubs + rm.sanitationfclts + rm.internet, data=all.result)\nsummary(fit1) # Finds the most influential variable based on t-test\n# Residual standard error: 9252 on 260 degrees of freedom\n# Multiple R-squared:  0.6595,\tAdjusted R-squared:  0.6556 \n# F-statistic: 167.9 on 3 and 260 DF,  p-value: < 2.2e-16\n\n# Check the regression properties\nscr <- par(mfrow=c(2,2))\nplot(fit1, ask=FALSE)\npar(scr)\nvif(fit1)\n# rm.mobcelsubs rm.sanitationfclts        rm.internet \n#   2.144475           1.844271           2.497945 \n\n\n# Step AIC\nrm.stepAIC <- step(lm(rm.gdpcap ~ 1, data=all.result), direction=\"forward\", \n                   rm.gdpcap ~ rm.fdi + rm.mobcelsubs + rm.watersrvcs + \n                     rm.researchersrnd)\nrm.stepAIC$coefficients\n\n# Produce the fit recommended by the AIC \"forward\" addition\nfit2 <- lm(rm.gdpcap ~ rm.fdi + rm.empfserv + rm.mobcelsubs + rm.watersrvcs + \n             rm.sanitationfclts + rm.secureintrnt + rm.internet + rm.researchersrnd, data=all.result)\nsummary(fit2)\n# Residual standard error: 9144 on 252 degrees of freedom\n# Multiple R-squared:  0.6766,\tAdjusted R-squared:  0.6664 \n# F-statistic: 65.91 on 8 and 252 DF,  p-value: < 2.2e-16\n\n\n\n# using leaps to select variables\n# Create a set of models\ngdpcap.leaps <- regsubsets(rm.gdpcap ~ ., data=all.result, nbest=1, method=\"exhaustive\")\n\n\n# Plot the models in different ways using different statistics\n# Select variables using the Leaps package\ncolfunc <- colorRampPalette(c(\"navy\", \"red\", \"orange\"))\nscr <- par(mfrow=c(2,2))\nplot(gdpcap.leaps, scale=\"bic\", main = \"GDP per capita Reg Model Ranking by BIC\", col=colfunc(10))\nplot(gdpcap.leaps, scale=\"adjr2\", main = \"GDP per capita Reg Model Ranking by Adjusted R^2\", col=colfunc(50))\nplot(gdpcap.leaps, scale=\"Cp\", main = \"GDP per capita Reg Model Ranking by Mallows' Cp\", col=colfunc(50))\npar(mfrow=c(1,1))\n\n# Plot the models with R^2 but contrast against Mallow CP\n# The highest R^2 is best, but the smallest CP closest to the number of vars\nop <- par(mfrow=c(2,2))\ngdpcap.legend <- subsets(gdpcap.leaps, statistic=\"adjr2\", legend = FALSE, min.size = 3, main = \"Adjusted R^2 (Max)\")\ngdpcap.legend <- subsets(gdpcap.leaps, statistic=\"cp\", legend = FALSE, min.size = 3, main = \"Mallow Cp (Min / Diag)\")\nabline(a = 1, b = 1, lty = 2)\ngdpcap.legend <- subsets(gdpcap.leaps, statistic=\"rss\", legend = FALSE, min.size = 3, main = \"Residual Sum Sq (Min)\")\ngdpcap.legend <- subsets(gdpcap.leaps, statistic=\"bic\", legend = FALSE, min.size = 3, main = \"BIC (Min)\")\npar(mfrow=c(1,1))\ngdpcap.legend\n\n# Let us use Adj R^2 as our preferred selection statistic\nbest.fit <- lm(rm.gdpcap ~ rm.mobcelsubs + rm.sanitationfclts + rm.internet, data=all.result)\nsummary(best.fit)\n# Residual standard error: 9252 on 260 degrees of freedom\n# Multiple R-squared:  0.6595,\tAdjusted R-squared:  0.6556 \n# F-statistic: 167.9 on 3 and 260 DF,  p-value: < 2.2e-16\n\n\n### Plot how would this model fair in DAAG 3-fold cross-validation\ncv.lm(data=all.result, best.fit, m=3, plotit=\"Residual\") # Try plotit=Observed, Residual\n\n\n# cross validation procedure\n# Bootstrap crossval for the selected optimum regression model\ntheta.fit <- function(x,y){lsfit(x,y)}\ntheta.predict <- function(fit,x){cbind(1,x) %*% fit$coef}\n\n# matrix of predictors, selected by Adj R^2 and BIC (same as hand crafted, prev. lesson)\nX.adjr2 <- as.matrix(all.result[c(\"rm.gdpcap\", \"rm.fdi\", \"rm.empfserv\", \"rm.mobcelsubs\", \n                                    \"rm.watersrvcs\", \"rm.sanitationfclts\", \"rm.secureintrnt\", \"rm.internet\",\n                                  \"rm.researchersrnd\")])\nX.bic <- as.matrix(all.result[c(\"rm.gdpcap\", \"rm.mobcelsubs\", \"rm.sanitationfclts\", \"rm.internet\")])\n\n\n# vector of predicted values\ny <- as.matrix(all.result[c(\"rm.gdpcap\")])\n\nresults <- crossval(X.adjr2, y, theta.fit, theta.predict, ngroup=10)\ncor(y, fit2$fitted.values)**2 # raw R2 from AIC recommendation\ncor(y,results$cv.fit)**2 # cross-validated R2, realistic\n\n# end of program",
    "created" : 1552995943123.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "328802779",
    "id" : "4E452688",
    "lastKnownWriteTime" : 1491792329,
    "last_content_update" : 1491792329,
    "path" : "~/R/Projects/R Assignment 1/Assignment 1.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}